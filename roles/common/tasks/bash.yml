- name: install latest bash
  package:
    name: bash
    state: latest
  become: yes
  tags:
    - packages

- name: copy bash files to remote server
  block:
    - name: check if bash block already exists
      lineinfile:
        path: "{{ item | basename }}"
        line: '# BEGIN ANSIBLE MANAGED BLOCK'
      check_mode: true
      register: check_block
      loop: "{{ rcfiles }}"
      ignore_errors: true
      when: bash_clear_existing | default(false)
    - name: clear and backup existing bash config files
      copy:
        content: ''
        dest: "{{ item | basename }}"
        backup: yes
      loop: "{{ backup_files }}"
      vars:
        backup_files: "{{ check_block.results | selectattr('changed') | map(attribute='item') | list }}"
      when: bash_clear_existing | default(false)
    - name: insert bash block
      blockinfile:
        path: "{{ ansible_env.HOME }}/{{ item | basename }}"
        block: "{{ lookup('file', item) }}"
        create: yes
        backup: yes
      loop: "{{ rcfiles }}"
  vars:
    rcfiles: "{{ q('fileglob', 'bash/.*') }}"
  tags:
    - configuration

- name: update .bash folder
  synchronize:
    src: bash/.bash/
    dest: "{{ ansible_env.HOME }}/.bash"
    recursive: yes
    archive: no
    times: yes
    rsync_opts:
      - "--chmod=Du=rwx,Dog=rx,Fu=rw,Fog=r"
  become: no
  tags:
    - configuration
