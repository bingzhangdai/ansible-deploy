- name: install shadowsocks-libev
  apt:
    name:
      - shadowsocks-libev
    update_cache: yes
    cache_valid_time: 86400
  notify: restart shadowsocks-libev

- name: install shadowsocks plugin
  block:
    - name: install v2ray
      block:
        - name: detect latest v2ray version
          import_role:
            name: utils
            tasks_from: github-release
          vars:
            user: "{{ ss_github.user }}"
            repo: "{{ ss_github.v2ray_repo }}"
        - name: download v2ray {{ release_version }}
          unarchive:
            src: "{{ ss_plugin_release.v2ray }}"
            dest: "/etc/shadowsocks-libev/"
            remote_src: yes
          notify: restart shadowsocks-libev
        - name: allow a non-root process to bind to a privileged port
          command: setcap 'CAP_NET_BIND_SERVICE=+eip' /etc/shadowsocks-libev/v2ray-plugin_linux_amd64
          when: ss_config.server_port < 1024
      when: ss_config.plugin.v2ray is defined
  when: ss_config.plugin is defined

- name: enable BBR
  block:
    - name: directly setting TCP BBR
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_set: yes
      loop:
        - name: net.core.default_qdisc
          value: fq
        - name: net.ipv4.tcp_congestion_control
          value: bbr
      when: ansible_kernel is version('4.9', '>=')

- name: configure and start shadowsocks-libev
  block:
    - name: edit /etc/shadowsocks-libev/config.json
      template:
        src: config.json.j2
        dest: /etc/shadowsocks-libev/config.json
      notify: restart shadowsocks-libev
    - name: enable tcp_fastopen
      sysctl:
        name: net.ipv4.tcp_fastopen
        value: '3'
        sysctl_set: yes
      when: ss_config.fast_open | default(false)
    - name: edit /etc/default/shadowsocks-libev
      template:
        src: shadowsocks-libev.j2
        dest: /etc/default/shadowsocks-libev
      notify: restart shadowsocks-libev
    - name: create /etc/systemd/system/shadowsocks-libev.service
      template:
        src: shadowsocks-libev.service.j2
        dest: /etc/systemd/system/shadowsocks-libev.service
      notify: restart shadowsocks-libev
    - name: be sure shadowsocks-libev is running and enabled
      systemd:
        name: shadowsocks-libev
        enabled: yes
        daemon_reload: yes
        state: started
    # use handler instead
    # - name: wait for shadowsocks-libev ready
    #   shell: "systemctl status shadowsocks-libev | grep Active"
    #   register: shadowsocks_status
    #   until: '"running" in shadowsocks_status.stdout'
    #   retries: 10
    #   delay: 1
    #   changed_when: false

- name: print server config
  debug:
    msg: "ss://{{ conf | b64encode  }}@{{ inventory_hostname }}:{{ ss_config.server_port }}#{{ ansible_hostname }}"
  vars:
    conf: "{{ ss_config.encrypt_method }}:{{ ss_config.password }}"
  ignore_errors: yes

- name: create local config files
  block:
    - name: create output folder under {{ output_dir }}
      file:
        path: "{{ output_dir }}"
        state: directory
    - name: edit local {{ output_dir }}/config.json
      template:
        src: config.local.json.j2
        dest: "{{ output_dir }}/config.json"
  vars:
    output_dir: "{{ hostvars['localhost']['playbook_dir'] }}/output/{{ role_name }}"
  delegate_to: localhost
  delegate_facts: True
  ignore_errors: yes
  run_once: true